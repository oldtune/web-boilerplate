// <auto-generated />
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(DictionaryDbContext))]
    partial class DictionaryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Data.Entities.Example", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("EnExample")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar");

                    b.Property<string>("ViMeaning")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar");

                    b.Property<int>("WordMeaningId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("WordMeaningId");

                    b.ToTable("Examples");
                });

            modelBuilder.Entity("Data.Entities.WordMeaning", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("EnMeaning")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar");

                    b.Property<string>("ViMeaning")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar");

                    b.Property<int>("WordTypeLinkId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("WordTypeLinkId");

                    b.ToTable("WordMeanings");
                });

            modelBuilder.Entity("Data.Entities.WordRecord", b =>
                {
                    b.Property<string>("Word")
                        .HasMaxLength(128)
                        .HasColumnType("varchar");

                    b.Property<string>("EnUkPronounce")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar");

                    b.Property<string>("EnUsPronounce")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar");

                    b.Property<string>("ViPronounce")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar");

                    b.HasKey("Word");

                    b.ToTable("Words");
                });

            modelBuilder.Entity("Data.Entities.WordType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("En")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar");

                    b.Property<string>("Vi")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.ToTable("WordTypes");
                });

            modelBuilder.Entity("Data.Entities.WordTypeLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Word")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar");

                    b.Property<int>("WordTypeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Word");

                    b.HasIndex("WordTypeId");

                    b.ToTable("WordTypeLinks");
                });

            modelBuilder.Entity("Data.Entities.Example", b =>
                {
                    b.HasOne("Data.Entities.WordMeaning", "WordMeaning")
                        .WithMany("Examples")
                        .HasForeignKey("WordMeaningId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WordMeaning");
                });

            modelBuilder.Entity("Data.Entities.WordMeaning", b =>
                {
                    b.HasOne("Data.Entities.WordTypeLink", "WordTypeLink")
                        .WithMany("WordMeanings")
                        .HasForeignKey("WordTypeLinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WordTypeLink");
                });

            modelBuilder.Entity("Data.Entities.WordTypeLink", b =>
                {
                    b.HasOne("Data.Entities.WordRecord", "WordRecord")
                        .WithMany("WordTypeLinks")
                        .HasForeignKey("Word")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.WordType", "WordType")
                        .WithMany("WordTypeLinks")
                        .HasForeignKey("WordTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WordRecord");

                    b.Navigation("WordType");
                });

            modelBuilder.Entity("Data.Entities.WordMeaning", b =>
                {
                    b.Navigation("Examples");
                });

            modelBuilder.Entity("Data.Entities.WordRecord", b =>
                {
                    b.Navigation("WordTypeLinks");
                });

            modelBuilder.Entity("Data.Entities.WordType", b =>
                {
                    b.Navigation("WordTypeLinks");
                });

            modelBuilder.Entity("Data.Entities.WordTypeLink", b =>
                {
                    b.Navigation("WordMeanings");
                });
#pragma warning restore 612, 618
        }
    }
}
